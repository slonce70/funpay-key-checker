"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è exe —Ñ–∞–π–ª–∞ –∏–∑ GUI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""
import os
import sys
import subprocess
import shutil

def install_dependencies():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏...")
    
    dependencies = [
        "FunPayAPI",
        "beautifulsoup4", 
        "customtkinter",
        "pyinstaller",
        "Pillow"  # –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–∫–æ–Ω–∫–∏
    ]
    
    for dep in dependencies:
        try:
            print(f"‚öôÔ∏è –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é {dep}...")
            subprocess.check_call([sys.executable, "-m", "pip", "install", dep, "--upgrade"])
        except subprocess.CalledProcessError:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å {dep}")

def create_icon_if_needed():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç"""
    if not os.path.exists("icon.ico"):
        print("üé® –°–æ–∑–¥–∞—é –∏–∫–æ–Ω–∫—É...")
        try:
            subprocess.check_call([sys.executable, "create_icon.py"])
        except Exception as e:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∏–∫–æ–Ω–∫—É: {e}")

def build_exe():
    """–°–æ–∑–¥–∞–Ω–∏–µ exe —Ñ–∞–π–ª–∞"""
    print("üöÄ –ù–∞—á–∏–Ω–∞—é —Å–±–æ—Ä–∫—É exe —Ñ–∞–π–ª–∞...")
    
    # –°–æ–∑–¥–∞–µ–º –∏–∫–æ–Ω–∫—É –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    create_icon_if_needed()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ pyinstaller
    try:
        import PyInstaller
    except ImportError:
        print("‚ùå PyInstaller –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é...")
        subprocess.check_call([sys.executable, "-m", "pip", "install", "pyinstaller"])
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è PyInstaller
    cmd = [
        "python", "-m", "PyInstaller",
        "--onefile",                    # –û–¥–∏–Ω exe —Ñ–∞–π–ª
        "--windowed",                   # –ë–µ–∑ –∫–æ–Ω—Å–æ–ª–∏
        "--name=FunPayKeyChecker",      # –ò–º—è exe —Ñ–∞–π–ª–∞
        "--hidden-import=customtkinter", # –°–∫—Ä—ã—Ç—ã–µ –∏–º–ø–æ—Ä—Ç—ã
        "--hidden-import=FunPayAPI",
        "--hidden-import=bs4",
        "--hidden-import=PIL",
        "--hidden-import=tkinter",
        "--collect-all=customtkinter",   # –°–æ–±—Ä–∞—Ç—å –≤—Å–µ —Ñ–∞–π–ª—ã customtkinter
        "--clean",                      # –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à
        "--noconfirm",                  # –ù–µ —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
        "gui_main.py"                   # –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É –µ—Å–ª–∏ –µ—Å—Ç—å
    if os.path.exists("icon.ico"):
        cmd.insert(-1, "--icon=icon.ico")
    
    # –î–æ–±–∞–≤–ª—è–µ–º config.ini –µ—Å–ª–∏ –µ—Å—Ç—å
    if os.path.exists("config.ini"):
        cmd.insert(-1, "--add-data=config.ini;.")
    
    try:
        print("‚öôÔ∏è –ó–∞–ø—É—Å–∫–∞—é PyInstaller...")
        print("üìù –ö–æ–º–∞–Ω–¥–∞:", " ".join(cmd))
        subprocess.check_call(cmd)
        
        print("‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("üìÅ Exe —Ñ–∞–π–ª –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø–∞–ø–∫–µ: dist/FunPayKeyChecker.exe")
        
        # –ö–æ–ø–∏—Ä—É–µ–º exe –≤ –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
        if os.path.exists("dist/FunPayKeyChecker.exe"):
            shutil.copy2("dist/FunPayKeyChecker.exe", "FunPayKeyChecker.exe")
            print("üìã Exe —Ñ–∞–π–ª —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
            size = os.path.getsize("FunPayKeyChecker.exe")
            size_mb = size / (1024 * 1024)
            print(f"üìè –†–∞–∑–º–µ—Ä exe —Ñ–∞–π–ª–∞: {size_mb:.1f} MB")
        
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ: {e}")
        return False
    
    return True

def build_portable():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Ä—Ç–∞—Ç–∏–≤–Ω–æ–π –≤–µ—Ä—Å–∏–∏ (–ø–∞–ø–∫–∞ —Å —Ñ–∞–π–ª–∞–º–∏)"""
    print("üì¶ –°–æ–∑–¥–∞—é –ø–æ—Ä—Ç–∞—Ç–∏–≤–Ω—É—é –≤–µ—Ä—Å–∏—é...")
    
    cmd = [
        "python", "-m", "PyInstaller",
        "--onedir",                     # –ü–∞–ø–∫–∞ —Å —Ñ–∞–π–ª–∞–º–∏
        "--windowed",                   # –ë–µ–∑ –∫–æ–Ω—Å–æ–ª–∏
        "--name=FunPayKeyChecker",      # –ò–º—è –ø–∞–ø–∫–∏
        "--hidden-import=customtkinter",
        "--hidden-import=FunPayAPI", 
        "--hidden-import=bs4",
        "--collect-all=customtkinter",
        "--clean",
        "--noconfirm",
        "gui_main.py"
    ]
    
    if os.path.exists("icon.ico"):
        cmd.insert(-1, "--icon=icon.ico")
    
    try:
        subprocess.check_call(cmd)
        print("‚úÖ –ü–æ—Ä—Ç–∞—Ç–∏–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞ –≤ –ø–∞–ø–∫–µ: dist/FunPayKeyChecker/")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ—Ä—Ç–∞—Ç–∏–≤–Ω–æ–π –≤–µ—Ä—Å–∏–∏: {e}")
        return False

def clean_build_files():
    """–û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ —Å–±–æ—Ä–∫–∏"""
    dirs_to_remove = ["build", "dist", "__pycache__"]
    files_to_remove = ["FunPayKeyChecker.spec"]
    
    print("üßπ –û—á–∏—â–∞—é –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã...")
    
    for dir_name in dirs_to_remove:
        if os.path.exists(dir_name):
            shutil.rmtree(dir_name)
            print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω–∞ –ø–∞–ø–∫–∞: {dir_name}")
    
    for file_name in files_to_remove:
        if os.path.exists(file_name):
            os.remove(file_name)
            print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω —Ñ–∞–π–ª: {file_name}")

if __name__ == "__main__":
    print("=" * 60)
    print("üîß FunPay Key Checker - –°–±–æ—Ä–∫–∞ EXE v2.0")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    if not os.path.exists("gui_main.py"):
        print("‚ùå –§–∞–π–ª gui_main.py –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        sys.exit(1)
    
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:")
    print("1. üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏")
    print("2. üöÄ –°–æ–±—Ä–∞—Ç—å exe —Ñ–∞–π–ª")
    print("3. üìÅ –°–æ–∑–¥–∞—Ç—å –ø–æ—Ä—Ç–∞—Ç–∏–≤–Ω—É—é –≤–µ—Ä—Å–∏—é")
    print("4. üßπ –û—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã")
    print("5. üéØ –ü–æ–ª–Ω–∞—è —Å–±–æ—Ä–∫–∞ (—É—Å—Ç–∞–Ω–æ–≤–∫–∞ + exe + –æ—á–∏—Å—Ç–∫–∞)")
    print("6. üé® –°–æ–∑–¥–∞—Ç—å –∏–∫–æ–Ω–∫—É")
    
    choice = input("\n–í–≤–æ–¥: ")
    
    if choice == "1":
        install_dependencies()
    elif choice == "2":
        build_exe()
    elif choice == "3":
        build_portable()
    elif choice == "4":
        clean_build_files()
    elif choice == "5":
        print("üéØ –ó–∞–ø—É—Å–∫–∞—é –ø–æ–ª–Ω—É—é —Å–±–æ—Ä–∫—É...")
        install_dependencies()
        if build_exe():
            input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...")
            clean_build_files()
    elif choice == "6":
        try:
            exec(open("create_icon.py").read())
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏–∫–æ–Ω–∫–∏: {e}")
    else:
        print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!")
    
    print("\n‚ú® –ì–æ—Ç–æ–≤–æ!")
    input("–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")