#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import sys
import os
import traceback

def debug_imports():
    """–û—Ç–ª–∞–¥–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤"""
    print("=== –û–¢–õ–ê–î–ö–ê –ò–ú–ü–û–†–¢–û–í ===")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏
    modules_to_check = [
        'tkinter',
        'customtkinter', 
        'FunPayAPI',
        'beautifulsoup4',
        'configparser',
        'threading',
        'PIL'
    ]
    
    for module in modules_to_check:
        try:
            if module == 'beautifulsoup4':
                import bs4
                print(f"‚úÖ {module} (bs4) - OK")
            elif module == 'PIL':
                from PIL import Image, ImageDraw
                print(f"‚úÖ {module} - OK")
            else:
                __import__(module)
                print(f"‚úÖ {module} - OK")
        except ImportError as e:
            print(f"‚ùå {module} - –û–®–ò–ë–ö–ê: {e}")
        except Exception as e:
            print(f"‚ö†Ô∏è {module} - –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: {e}")

def debug_funpay_api():
    """–û—Ç–ª–∞–¥–∫–∞ FunPayAPI"""
    print("\n=== –û–¢–õ–ê–î–ö–ê FUNPAY API ===")
    
    try:
        import FunPayAPI
        print(f"‚úÖ FunPayAPI –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–ª–∞—Å—Å—ã
        try:
            from FunPayAPI.common import exceptions
            print("‚úÖ FunPayAPI.common.exceptions - OK")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
            available_exceptions = [attr for attr in dir(exceptions) if not attr.startswith('_') and 'Error' in attr]
            print(f"   –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è: {', '.join(available_exceptions)}")
            
        except ImportError as e:
            print(f"‚ùå FunPayAPI.common.exceptions - –û–®–ò–ë–ö–ê: {e}")
            
        try:
            from FunPayAPI.types import OrderStatuses
            print("‚úÖ FunPayAPI.types.OrderStatuses - OK")
        except ImportError as e:
            print(f"‚ùå FunPayAPI.types.OrderStatuses - –û–®–ò–ë–ö–ê: {e}")
            
        try:
            account_class = getattr(FunPayAPI, 'Account', None)
            if account_class:
                print("‚úÖ FunPayAPI.Account - OK")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç–æ–¥—ã Account
                test_account = account_class("test_key")
                methods = [method for method in dir(test_account) if not method.startswith('_') and callable(getattr(test_account, method))]
                print(f"   –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Ç–æ–¥—ã: {len(methods)} (get, get_sells, get_order –∏ –¥—Ä.)")
                
            else:
                print("‚ùå FunPayAPI.Account - –ù–ï –ù–ê–ô–î–ï–ù")
        except Exception as e:
            print(f"‚ùå FunPayAPI.Account - –û–®–ò–ë–ö–ê: {e}")
            
    except ImportError as e:
        print(f"‚ùå FunPayAPI - –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        print("   –†–µ—à–µ–Ω–∏–µ: pip install FunPayAPI>=1.0.0")

def debug_gui_creation():
    """–û—Ç–ª–∞–¥–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è GUI"""
    print("\n=== –û–¢–õ–ê–î–ö–ê GUI ===")
    
    try:
        import customtkinter as ctk
        print("‚úÖ CustomTkinter –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        # –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –æ–∫–Ω–æ
        try:
            ctk.set_appearance_mode("dark")
            ctk.set_default_color_theme("blue")
            print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ CustomTkinter –ø—Ä–∏–º–µ–Ω–µ–Ω—ã")
            
            root = ctk.CTk()
            root.title("Test Window")
            print("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–æ")
            root.destroy()
            print("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è GUI: {e}")
            traceback.print_exc()
            
    except ImportError as e:
        print(f"‚ùå CustomTkinter - –û–®–ò–ë–ö–ê: {e}")

def debug_config():
    """–û—Ç–ª–∞–¥–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("\n=== –û–¢–õ–ê–î–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò ===")
    
    config_file = "config.ini"
    
    if os.path.exists(config_file):
        print(f"‚úÖ –§–∞–π–ª {config_file} –Ω–∞–π–¥–µ–Ω")
        
        try:
            import configparser
            config = configparser.ConfigParser()
            config.read(config_file, encoding="utf-8")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ–∫—Ü–∏–∏
            sections = config.sections()
            print(f"   –°–µ–∫—Ü–∏–∏: {sections}")
            
            if "FunPay" in sections:
                golden_key = config.get("FunPay", "golden_key", fallback="")
                user_agent = config.get("FunPay", "user_agent", fallback="")
                
                print(f"   Golden Key: {'—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if golden_key else '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}")
                print(f"   User Agent: {'—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if user_agent else '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù'}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º User Agent –Ω–∞ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã
                if user_agent:
                    try:
                        user_agent.encode('ascii')
                        print("   ‚úÖ User Agent —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ –¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã")
                    except UnicodeEncodeError:
                        print("   ‚ö†Ô∏è User Agent —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã (–∫–∏—Ä–∏–ª–ª–∏—Ü–∞)")
            
            if "Safety" in sections:
                min_delay = config.get("Safety", "min_delay_sec", fallback="2")
                max_delay = config.get("Safety", "max_delay_sec", fallback="5")
                print(f"   –ó–∞–¥–µ—Ä–∂–∫–∏: {min_delay}-{max_delay} —Å–µ–∫")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
    else:
        print(f"‚ö†Ô∏è –§–∞–π–ª {config_file} –Ω–µ –Ω–∞–π–¥–µ–Ω (–±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏)")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ª–∞–¥–∫–∏"""
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê FUNPAY KEY CHECKER")
    print("=" * 50)
    
    debug_imports()
    debug_funpay_api()
    debug_config()
    debug_gui_creation()
    
    print("\n=== –ü–û–ü–´–¢–ö–ê –ó–ê–ü–£–°–ö–ê –û–°–ù–û–í–ù–û–ì–û –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø ===")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∞—Å—Å
        sys.path.insert(0, '.')
        from gui_main import FunPayKeyChecker
        
        print("‚úÖ –ö–ª–∞—Å—Å FunPayKeyChecker –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        # –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —ç–∫–∑–µ–º–ø–ª—è—Ä
        app = FunPayKeyChecker()
        print("‚úÖ –≠–∫–∑–µ–º–ø–ª—è—Ä FunPayKeyChecker —Å–æ–∑–¥–∞–Ω")
        
        print("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...")
        print("   (–ó–∞–∫—Ä–æ–π—Ç–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏)")
        app.run()
        
    except Exception as e:
        print(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        traceback.print_exc()

if __name__ == "__main__":
    main()