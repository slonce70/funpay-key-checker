name: Build and Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Test import
      run: |
        python -c "import tkinter; print('tkinter OK')"
        python -c "import customtkinter; print('customtkinter OK')"
        python -c "from bs4 import BeautifulSoup; print('beautifulsoup4 OK')"
    
    - name: Test GUI creation (headless)
      run: |
        python -c "
        import os
        os.environ['DISPLAY'] = ':99'
        try:
            from gui_main import FunPayKeyChecker
            print('GUI import OK')
        except Exception as e:
            print(f'GUI test failed: {e}')
        "

  build-exe:
    needs: test
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Create icon
      run: |
        python -c "
        try:
            from PIL import Image, ImageDraw
            import math
            
            size = 64
            img = Image.new('RGBA', (size, size), (0, 0, 0, 0))
            draw = ImageDraw.Draw(img)
            
            center = size // 2
            for y in range(size):
                for x in range(size):
                    distance = math.sqrt((x - center)**2 + (y - center)**2)
                    max_distance = math.sqrt(2) * center
                    ratio = min(distance / max_distance, 1.0)
                    
                    start_color = (25, 25, 112)
                    end_color = (30, 144, 255)
                    
                    r = int(start_color[0] + (end_color[0] - start_color[0]) * ratio)
                    g = int(start_color[1] + (end_color[1] - start_color[1]) * ratio)
                    b = int(start_color[2] + (end_color[2] - start_color[2]) * ratio)
                    
                    img.putpixel((x, y), (r, g, b, 255))
            
            key_color = (255, 255, 255, 255)
            draw.rectangle([18, 28, 48, 36], fill=key_color)
            draw.ellipse([12, 22, 32, 42], fill=key_color)
            draw.ellipse([16, 26, 28, 38], outline=(25, 25, 112), width=2)
            draw.rectangle([42, 24, 48, 28], fill=key_color)
            draw.rectangle([42, 36, 48, 40], fill=key_color)
            
            img.save('icon.ico', format='ICO', sizes=[(64, 64), (32, 32), (16, 16)])
            img.resize((32, 32)).save('icon_32x32.png')
            print('Icon created successfully')
        except Exception as e:
            print(f'Icon creation failed: {e}')
        "
    
    - name: Build exe
      run: |
        python -m PyInstaller --onefile --windowed --name=FunPayKeyChecker --icon=icon.ico --add-data="icon_32x32.png;." --add-data="icon.ico;." --hidden-import=customtkinter --hidden-import=FunPayAPI --hidden-import=bs4 --clean --noconfirm gui_main.py
    
    - name: Test exe
      run: |
        if (Test-Path "dist/FunPayKeyChecker.exe") {
          Write-Host "EXE file created successfully"
          $size = (Get-Item "dist/FunPayKeyChecker.exe").Length / 1MB
          Write-Host "EXE size: $([math]::Round($size, 1)) MB"
        } else {
          Write-Error "EXE file not found"
          exit 1
        }
    
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: FunPayKeyChecker-exe
        path: dist/FunPayKeyChecker.exe
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: dist/FunPayKeyChecker.exe
        body: |
          ## üöÄ FunPay Key Checker ${{ github.ref_name }}
          
          ### üì¶ –°–∫–∞—á–∞—Ç—å
          - **Windows EXE**: FunPayKeyChecker.exe (~35-40 MB)
          
          ### üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞
          1. –°–∫–∞—á–∞–π—Ç–µ FunPayKeyChecker.exe
          2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ñ–∞–π–ª
          3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Golden Key –≤ –ø–µ—Ä–≤–æ–π –≤–∫–ª–∞–¥–∫–µ
          
          ### ‚ú® –ß—Ç–æ –Ω–æ–≤–æ–≥–æ
          –°–º. [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md)
          
          ### üêõ –°–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ
          [–°–æ–∑–¥–∞—Ç—å Issue](https://github.com/${{ github.repository }}/issues/new)
          
          ### üë§ –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫
          @slonce70
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}